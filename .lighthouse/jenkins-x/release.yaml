apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: chart
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/go-plugin/release.yaml@versionStream
          name: ""
          computeResources: {}
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: ""
          computeResources: {}
        - name: next-version
          computeResources: {}
        - name: jx-variables
        - name: release-binary
          computeResources: {}
        - name: build-and-push-image:webhooks
          computeResources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=docker/webhooks/Dockerfile --destination=ghcr.io/jenkins-x/lighthouse-webhooks:$VERSION --destination=ghcr.io/jenkins-x/lighthouse-webhooks:latest --build-arg=VERSION=$VERSION
        - name: build-and-push-image:poller
          computeResources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=docker/poller/Dockerfile --destination=ghcr.io/jenkins-x/lighthouse-poller:$VERSION --destination=ghcr.io/jenkins-x/lighthouse-poller:latest --build-arg=VERSION=$VERSION
        - name: build-and-push-image:keeper
          computeResources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=docker/keeper/Dockerfile --destination=ghcr.io/jenkins-x/lighthouse-keeper:$VERSION --destination=ghcr.io/jenkins-x/lighthouse-keeper:latest --build-arg=VERSION=$VERSION
        - name: build-and-push-image:foghorn
          computeResources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=docker/foghorn/Dockerfile --destination=ghcr.io/jenkins-x/lighthouse-foghorn:$VERSION --destination=ghcr.io/jenkins-x/lighthouse-foghorn:latest --build-arg=VERSION=$VERSION
        - name: build-and-push-image:tekton
          computeResources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=docker/tekton/Dockerfile --destination=ghcr.io/jenkins-x/lighthouse-tekton-controller:$VERSION --destination=ghcr.io/jenkins-x/lighthouse-tekton-controller:latest --build-arg=VERSION=$VERSION
        - name: build-and-push-image:jenkins
          computeResources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=docker/jenkins/Dockerfile --destination=ghcr.io/jenkins-x/lighthouse-jenkins-controller:$VERSION --destination=ghcr.io/jenkins-x/lighthouse-jenkins-controller:latest --build-arg=VERSION=$VERSION
        - name: build-and-push-image:gc-jobs
          computeResources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=docker/gc/Dockerfile --destination=ghcr.io/jenkins-x/lighthouse-gc-jobs:$VERSION --destination=ghcr.io/jenkins-x/lighthouse-gc-jobs:latest --build-arg=VERSION=$VERSION
        - name: chart-docs
          computeResources: {}
        - image: ghcr.io/jenkins-x/jx-boot:3.10.131
          name: changelog
          computeResources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh

            if [ -d "charts/$REPO_NAME" ]; then
              jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
              jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
              jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi
            
            jx changelog create --verbose --header-file=hack/changelog-header.md --version=$VERSION --rev=$PULL_BASE_SHA --output-markdown=changelog.md --prerelease
        - name: release-chart
          computeResources: {}
        - name: upload-binaries
          computeResources: {}
          script: |
            #!/bin/bash
            source .jx/variables.sh

            git add * || true
            git add * || true
            git commit -a -m "chore: release $VERSION" --allow-empty
            git tag -fa v$VERSION -m "Release version $VERSION"
            git push --force origin v$VERSION
        - name: promote-release
          computeResources: {}
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 240h0m0s
status: {}
